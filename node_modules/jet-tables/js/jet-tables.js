(function (define) {
        'use strict';

        (function (root, factory) {
                if (typeof define === 'function' && define.amd) {
                        define(ResizerPanelLayout,factory);
                } else if (typeof exports === 'object') {
                        module.exports = factory();
                } else {
                        root.jetTables = factory();
                }
        }(window, function () {
                return (function () {

                        var jetTables = function(){
                                function jetTables(jsonInfo,rootElemnt,tableSettings)
                                {
                                        this.app=0;
                                        this.magicRowNumber = tableSettings.magicRowNumber;
                                        this.tableSettings = tableSettings;
                                        this.table ='None Allocated';

                                        //for the custom jetPipinTable returns an array we can append the control to
                                        //
                                        this.jetPopinArray=[];

                                        //this.isFormActive = tableSettings.inputFormForXHR.isFormActive

                                        //if the stuff exists in JSON
                                        if( tableSettings.hasOwnProperty('inputFormForXHR'))
                                        {
                                                this.isFormActive = tableSettings.inputFormForXHR.isFormActive
                                        }


                                        // console.log("in the table constructor");
                                        this.doLayout(jsonInfo,rootElemnt,tableSettings);

                                        //     <table class="table table-hover">
                                        //     <thead>
                                        //
                                        //
                                        //     <tr>
                                        //         <th>Product</th>
                                        //         <th>Cardinality</th>
                                        //         <th>Price per item</th>
                                        //     </tr>
                                        //     </thead>
                                        // <tbody>
                                        //
                                        //
                                        //     <tr>
                                        //         <td>Apple</td>
                                        //         <td>5</td>
                                        //         <td>$2</td>
                                        //     </tr>
                                        //     <tr>
                                        //         <td>Pear</td>
                                        //         <td>3</td>
                                        //         <td>$3</td>
                                        //     </tr>
                                        //     <tr>
                                        //         <td>Sausage</td>
                                        //         <td>10</td>
                                        //         <td>$0.5</td>
                                        //     </tr>
                                        //     <tr>
                                        //         <td>Pineapple</td>
                                        //         <td>2</td>
                                        //         <td>$8</td>
                                        //     </tr>
                                        //     <tr>
                                        //         <td>Tomato</td>
                                        //         <td>5</td>
                                        //         <td>$1</td>
                                        //     </tr>
                                        //     <tr>
                                        //         <td>Lightsaber</td>
                                        //         <td>2</td>
                                        //         <td>$99 999</td>
                                        //     </tr>
                                        // </tbody>
                                        // </table>
                                }

                                //+-+-+-+-+ +-+-+-+-+-+-+-+-+
                                //|F|O|R|M| |E|L|E|M|E|N|T|S|
                                //+-+-+-+-+ +-+-+-+-+-+-+-+-+
                                jetTables.prototype.CreateFormElements = function(root,formElement,id)
                                {
                                        console.log(id);

                                        // perhaps adda hidden type
                                        //console.log(id,345);
                                        // inputFormForXHR : {
                                        //         isFormActive : true,
                                        //         FormId : 'embeded12',
                                        //         primaryKey : 'idbenificiary',
                                        //         formElements : [ {
                                        //
                                        //               id : 'embeded12',
                                        //               type : 'checkBox',
                                        //               name : 'idbenificiary',
                                        //               label : 'embeded12',
                                        //              defaultValue : 'embeded12'
                                        //
                                        //              }]
                                        //
                                        // };
                                        //
                                        if (formElement.type == 'button'){


                                                var row = document.createElement('div');
                                                row.classList.add('row-component');
                                                root.appendChild(row);

                                                var Tbox = document.createElement('div');
                                                Tbox.setAttribute ('style' ,'align-items: center');
                                                Tbox.classList.add('button-group');
                                                row.appendChild(Tbox);


                                                var input = document.createElement('input');
                                                input.classList.add('button-component');
                                                input.setAttribute('type' , 'button');
                                                input.setAttribute('value' , formElement.label);

                                                input.setAttribute('id' , formElement.id);
                                                // input.setAttribute('name' , 'checkBox'+id);

                                                Tbox.appendChild(input);
                                        }
if (formElement.type == 'checkBox'){

        var row = document.createElement('div');
        row.classList.add('row-component');
        root.appendChild(row);

        var Tbox = document.createElement('div');
        Tbox.setAttribute ('style' ,'align-items: center');
        Tbox.classList.add('select-component');
        row.appendChild(Tbox);

        var label = document.createElement('div');
        label.classList.add('label-container');
        Tbox.appendChild(label);

        var labeltxt = document.createElement('label');
        labeltxt.innerHTML = formElement.label;
        label.appendChild(labeltxt);






        var input = document.createElement('input');
        input.setAttribute('type' , 'checkbox');
        input.setAttribute('id' , formElement.id);
        input.setAttribute('value' , id);
        input.setAttribute('name' , formElement.name);

        Tbox.appendChild(input);

        //question is do  I need to bind

        input.addEventListener( 'change', function(e) {
    if(this.checked) {
        // Checkbox is checked..
        console.log("=============/////////===============////////////==============///////==========",e.target);
        e.target.setAttribute('name', formElement.name+'_'+id);
        let rowBack = e.target.parentNode.parentNode.parentNode.parentNode.parentNode;
        rowBack.style.backgroundColor  = "rgba(120,0.0,0.5)";
        console.log(rowBack);
    } else {
        // Checkbox is not checked..
    }
});

}


                                        if (formElement.type == 'radio'){




                                                var row = document.createElement('div');
                                                row.classList.add('row-component');
                                                root.appendChild(row);

                                                var Tbox = document.createElement('div');
                                                Tbox.setAttribute ('style' ,'align-items: center');
                                                Tbox.classList.add('select-component');
                                                row.appendChild(Tbox);

                                                var label = document.createElement('div');
                                                label.classList.add('label-container');
                                                Tbox.appendChild(label);

                                                var labeltxt = document.createElement('label');
                                                labeltxt.innerHTML = formElement.label;
                                                label.appendChild(labeltxt);






                                                var input = document.createElement('input');
                                                input.setAttribute('type' , 'radio');
                                                input.setAttribute('id' , formElement.id);
                                                input.setAttribute('value' , id);
                                                input.setAttribute('name' , formElement.name);

                                                Tbox.appendChild(input);
                                        }
                                        if (formElement.type == 'textInput')
                                        {
                                                //here is the new element this one we will add to a blank column so we need to pass that column
                                                //
                                                var row = document.createElement('div');
                                                row.classList.add('row-component');
                                                root.appendChild(row);

                                                var Tbox = document.createElement('div');
                                                Tbox.setAttribute ('style' ,'align-items: center');
                                                Tbox.classList.add('button-group');
                                                row.appendChild(Tbox);

                                                //the magic
                                                var InputText =  document.createElement('input');
                                                InputText.setAttribute('type' , 'text');
                                                InputText.setAttribute('id' , formElement.id);
                                                InputText.setAttribute('value' , id);
                                                InputText.setAttribute('name' , formElement.name+'_depoisitId_'+id);
                                                Tbox.appendChild(InputText);


                                        }
                                        if (formElement.type == 'selectInput')
                                        {
                                                //here is the new element this one we will add to a blank column so we need to pass that column
                                                //
                                                var row = document.createElement('div');
                                                row.classList.add('row-component');
                                                root.appendChild(row);

                                                var Tbox = document.createElement('div');
                                                Tbox.setAttribute ('style' ,'align-items: center');
                                                Tbox.classList.add('button-group');
                                                row.appendChild(Tbox);


                                                // <select id="cars">
                                                //   <option value="volvo">Volvo</option>
                                                //   <option value="saab">Saab</option>
                                                //   <option value="mercedes">Mercedes</option>
                                                //   <option value="audi">Audi</option>
                                                // </select>
                                                //the magic
                                                var InputSelect =  document.createElement('select');
                                                //InputSelect.setAttribute('type' , 'text');
                                                InputSelect.setAttribute('id' , formElement.name+'_depoisitId_'+id);
                                                InputSelect.setAttribute('value' , id);
                                                InputSelect.setAttribute('name' , formElement.name+'_depoisitId_'+id);

                                                //console.log(formElement.arrayData,55565);
                                                var json_array = {
                                                        "elements" : [
                                                                {
                                                                        "id" : "",
                                                                        "name" : "",
                                                                        "address" : ""
                                                                },
                                                                {
                                                                        "id" : 22,
                                                                        "name" : "the houaw on the rock",
                                                                        "address" : "172 Row Ave , Bramley"
                                                                },
                                                                {
                                                                        "id" : 24,
                                                                        "name" : "the houaw on the rock",
                                                                        "address" : "172 Row Ave , Bramley"
                                                                }
                                                        ]

                                                };

                                                json_array=formElement.arrayData;
                                                // console.log(json_array,454);

                                                // now the job is to creat the options
                                                let arrayLength = json_array.length ;
                                                for (let x = 0 ; x<arrayLength ; x++)
                                                {
                                                        let eId =         json_array[x].idProperties;
                                                        let eName =        json_array[x].propertyname;
                                                        let eAddress =        json_array[x].address;

                                                        let selectOption = document.createElement('option');
                                                        selectOption.setAttribute('value',eId);
                                                        selectOption.innerHTML = '<b>'+eName+'</b>'+eAddress;
                                                        InputSelect.appendChild(selectOption);

                                                }


                                                Tbox.appendChild(InputSelect);


                                        }
                                        if (formElement.type == 'jetInputTable')
                                        {

                                                // console.log(root,4344);
                                                // console.log(root,formElement,id,545555)
                                                var row = document.createElement('div');
                                                // row.classList.add('row-component');
                                                //var random = Math.rand;
                                                //row.setAttribute('id',formElement.name+'_depoisitId_'+id)

                                                //root.appendChild(row);
                                                //
                                                var row = document.createElement('div');
                                                row.classList.add('row-component');

                                                root.appendChild(row);

                                                let button = document.createElement('button');
                                                button.setAttribute('value',id);
                                                button.setAttribute('type','button');
                                                button.setAttribute('id','property_depoisitId_'+id);
                                                button.setAttribute('class',"button-component");
                                                button.innerHTML = '<b>'+id+'</b><i class="far fa-arrow-alt-circle-right"></i>';
                                                row.appendChild(button)

                                                //<input id="firstname" name="firstname" placeholder="First Name" autocomplete="off">
                                                //<
                                                //class="text-box-component"
                                                let divStyle = document.createElement('div');
                                                divStyle.classList.add('text-box-component');
                                                row.appendChild(divStyle);



let inputTextBox = document.createElement('input');
inputTextBox.setAttribute('id','rigfromDropdown'+id);
inputTextBox.setAttribute('name','property');

inputTextBox.setAttribute('type','hidden');
divStyle.appendChild(inputTextBox)

let addressBox = document.createElement('textarea');
addressBox.setAttribute('id','AddressDisplay'+id);
addressBox.setAttribute('name','AddressDisplay');
divStyle.appendChild(addressBox)

                                                //set the row keys


                                                this.jetPopinArray.push(formElement.name+'_depoisitId_'+id);
                                                // console.log(this.jetPopinArray);
                                                // this is a custom jet control I should add it to the tables dependancy list lets see if it works
                                                //
                                                // var jetPopinTable2 = new jetPopinTable('property_depoisitId_49', formElement.arrayData);
                                                // jetPopinTable2.on('select', function(){
                                                //         console.log('callback applied');
                                                // },this);


                                                //create the button and the text box

                                        }
                                }


                                jetTables.prototype.constructTable = function(root,tableSettings)
                                {

                                        if (this.isFormActive)
                                        {

                                                var rootElemnt = document.getElementById(root);



                                                let form =  document.createElement('form')
                                                form.setAttribute("id",tableSettings.inputFormForXHR.FormId);

                                                rootElemnt.appendChild(form);

                                                var dialogC = document.createElement('div')
                                                dialogC.classList.add("dialog-content");
                                                form.appendChild(dialogC);


                                                var table_box_bootstrap = document.createElement("div");
                                                table_box_bootstrap.setAttribute('id',tableSettings.tableBoxName);
                                                form.appendChild(table_box_bootstrap);

                                                var tableEelment = document.createElement("table");
                                                tableEelment.classList.add("table");
                                                tableEelment.classList.add("table-hover");
                                                tableEelment.setAttribute('id',tableSettings.tableId);
                                                table_box_bootstrap.appendChild(tableEelment);
                                                this.table = tableEelment;

                                                var footer = document.createElement('div');
                                                footer.classList.add('dialog-footer');
                                                form.appendChild(footer);

                                                var buttonGroup = document.createElement('div');
                                                buttonGroup.classList.add('button-group');
                                                footer.appendChild(buttonGroup);

                                                var formSelect = document.createElement('button');
                                                formSelect.setAttribute('type','submit');
                                                formSelect.setAttribute('class',"button-component")
                                                formSelect.innerHTML = 'submit';
                                                buttonGroup.appendChild(formSelect);

                                                var formCancel = document.createElement('button');
                                                formCancel.setAttribute('type','button');
                                                formCancel.setAttribute('class',"button-component")
                                                formCancel.innerHTML = 'cancel';
                                                buttonGroup.appendChild(formCancel);

                                                // <div class="dialog-footer">
                                                // <div class="button-group">
                                                // <button class="button-component" type="submit">submit</button>
                                                //
                                                // <button class="button-component" type="button">cancel</button>
                                                // </div>
                                                // </div>

                                        }else{
                                                // console.log("__________________________");
                                                // console.log(tableSettings.tableId);
                                                // console.log("__________________________");
                                                var rootElemnt = document.getElementById(root);
                                                //<div id="table_box_bootstrap">
                                                //<
                                                var table_box_bootstrap = document.createElement("div");
                                                table_box_bootstrap.setAttribute('id',tableSettings.tableBoxName);
                                                rootElemnt.appendChild(table_box_bootstrap);

                                                var tableEelment = document.createElement("table");
                                                tableEelment.classList.add("table");
                                                tableEelment.classList.add("table-hover");
                                                tableEelment.setAttribute('id',tableSettings.tableId);
                                                table_box_bootstrap.appendChild(tableEelment);
                                                this.table = tableEelment;
                                        }
                                        return tableEelment;
                                }


                                jetTables.prototype.addHeaderElemnets = function(root , theElementToAdd,columnWidths)
                                {
                                        //console.log(root+"+++++++++++++++++____");
                                        var thElement = document.createElement("th");
                                        thElement.innerHTML =  theElementToAdd;
                                        thElement.width = columnWidths;
                                        root.appendChild(thElement);

                                }
                                jetTables.prototype.addHeaderElemnetsVericlyFirstOne=function(root , theElementToAdd,columnWidths)
                                {
                                        //console.log(root+"+++++++++++++++++____");
                                        var thElement = document.createElement("th");
                                        thElement.classList.add('hidden-header');
                                        thElement.innerHTML =  '<span class="hide">'+theElementToAdd+'</span>';
                                        //   thElement.innerHTML =  theElementToAdd;
                                        thElement.width = columnWidths;
                                        root.appendChild(thElement);

                                }
                                jetTables.prototype.addHeaderElemnetsVericly = function(root , theElementToAdd,columnWidths)
                                {
                                        //console.log(root+"+++++++++++++++++____");
                                        var thElement = document.createElement("th");
                                        thElement.classList.add('vert-cell');
                                        thElement.innerHTML =  theElementToAdd;
                                        thElement.width = columnWidths;
                                        root.appendChild(thElement);

                                }


                                jetTables.prototype.constructHeader = function(jsonlistheadertitles, mytableElement,columnWidths)
                                {

                                        // console.log("________This Fails __________");
                                        // console.log(columnWidths);
                                        // console.log("__________________________");
                                        var headerElement= document.createElement("thead");
                                        mytableElement.appendChild(headerElement);
                                        var trElement = document.createElement("tr");
                                        //trElement.setAttribute("id","this1");
                                        headerElement.appendChild(trElement);

                                        //var theRoot = document.getElementById("this1");



                                        var theRoot = trElement;
                                        for (var i = 0 ; i<jsonlistheadertitles.length ; i++)
                                        {
                                                //console.log("count "+jsonlistheadertitles[i]);
                                                //
                                                //console.log(this.magicRowNumber);
                                                //console.log(typeof this.magicRowNumber);
                                                if (typeof this.magicRowNumber === 'undefined' )
                                                {
                                                        //console.log('is in the call');

                                                        this.addHeaderElemnets(theRoot,jsonlistheadertitles[i],columnWidths[i]);

                                                }else

                                                if(i<this.magicRowNumber && typeof this.magicRowNumber !== 'undefined'){

                                                        this.addHeaderElemnets(theRoot,jsonlistheadertitles[i],columnWidths[i]);
                                                }else{
                                                        // if(i==16){ this.app=0;}
                                                        if (this.app==0){

                                                                this.addHeaderElemnetsVericlyFirstOne(theRoot,jsonlistheadertitles[i],'');


                                                                // this.addHeaderElemnetsVericly(theRoot,jsonlistheadertitles[i],'');
                                                                // style.sheet.insertRule('td.vert-cell:nth-of-type('+i+'):before { content: "'+jsonlistheadertitles[i]+'"; }');
                                                                this.app=1;
                                                        }else{
                                                                this.addHeaderElemnetsVericly(theRoot,jsonlistheadertitles[i],'');
                                                                // adding the dynamic styles to the headers
                                                                //style.sheet.insertRule('td.vert-cell:nth-of-type('+i+'):before { content: "'+jsonlistheadertitles[i-1]+'"; }');
                                                                //  style.sheet.insertRule('#target {color: darkseagreen}');
                                                                //  console.log( style.sheet);
                                                                //
                                                        }
                                                }


                                        }

                                        // for the forms
                                        if (this.isFormActive)
                                        {
                                                this.addHeaderElemnets(theRoot,'Action\'s');
                                        }



                                }
                                jetTables.prototype.constructColumn= function(rowInfo,root)
                                {
                                        //   console.log(Object.keys(rowInfo).length);
                                        //var columnInfo = Object.keys(rowInfo);
                                        //console.log(columnInfo);
                                        //create the style
                                        var style = document.createElement('style');
                                        document.head.appendChild(style);



                                        var i =1;
                                        // This for loop is for the placement of JSON data and not the form elements
                                        for (var key in rowInfo) {
                                                // console.log(key, rowInfo[key]);
                                                var tdElement = document.createElement('td');
                                                var tdElement2 = document.createElement('td');
                                                //if the value is blank
                                                if (rowInfo[key] =="")
                                                {
                                                        tdElement.innerHTML =  '...';

                                                }else
                                                {
                                                        tdElement.innerHTML = rowInfo[key];
                                                        //you can add the extra element here
                                                        //
                                                        //
                                                        //console.log(rowInfo[key]);
                                                        if (this.isFormActive)
                                                        {

                                                                //tdElement.innerHTML = '<input type="text" id="" value="undefined" name="property">'  ;

                                                                let FormElements= this.tableSettings.inputFormForXHR.formElements;
                                                                let allocateKey= this.tableSettings.inputFormForXHR.primaryKey;

                                                                //console.log(FormElements);
                                                                var tdElement2 = document.createElement('td');
                                                                var tdElement3 = document.createElement('div');
                                                                for(var x =0 ; x < FormElements.length ;x++)
                                                                {
                                                                        //console.log(FormElements[x]);
                                                                        // IF THE JSPON SETTING SAYS IN THE COLUMN IN THE FORM
                                                                        //if (key == 'property')
                                                                        if (key == FormElements[x].inputToColumn)
                                                                        {
                                                                                //inputToColumn
                                                                                console.log(rowInfo[allocateKey]);

                                                                                this.CreateFormElements(tdElement,FormElements[x],rowInfo[allocateKey]);

                                                                        }

                                                                }
                                                        }

                                                }
                                                if(i>this.magicRowNumber)
                                                {
                                                        tdElement.classList.add('vert-cell')
                                                        style.sheet.insertRule('td.vert-cell:nth-of-type('+i+'):before { content: "'+key+'"; }');

                                                }


                                                root.appendChild(tdElement);

                                                i++;
                                        }
                                        // this procedure adds form elements to the end of the  table row
                                        // only start creating form elements if it is active
                                        if (this.isFormActive)
                                        {
                                                //run a loop here to extract the array of elements from JSON
                                                //console.log(this.tableSettings.inputFormForXHR.formElements);

                                                let FormElements= this.tableSettings.inputFormForXHR.formElements;
                                                let allocateKey= this.tableSettings.inputFormForXHR.primaryKey;

                                                //console.log(FormElements);
                                                var tdElement2 = document.createElement('td');
                                                var tdElement3 = document.createElement('div');
                                                // this for loop itterates
                                                for(var x =0 ; x < FormElements.length ;x++)
                                                {
                                                        //console.log(FormElements[x].Label);
                                                        // this is what is diffucult if there is a cvlue to be passed into the form element fron the table for selection
                                                        // how to maintian this
                                                        // a: set the value in the JSON argument
                                                        // b: set it up in the initiator of this class
                                                        // c: pass with a prototype
                                                        //
                                                        // console.log('=================================');
                                                        // console.log('tdElement3');
                                                        // console.log(tdElement3);
                                                        // console.log('FormElements');
                                                        // console.log(FormElements);
                                                        // console.log('x');
                                                        // console.log(x);
                                                        // console.log('rowInfo');
                                                        // console.log(rowInfo);
                                                        // console.log('allocateKey');
                                                        // console.log(allocateKey);
                                                        // console.log('=================================');
                                                        //

                                                        //check and see if the form elements are embedded in a column in the table if not
                                                        // creat them after
                                                        'inputToColumn' in FormElements[x] ? console.log('Child detected') : this.CreateFormElements(tdElement3,FormElements[x],rowInfo[allocateKey]);


                                                }
                                                root.appendChild(tdElement2);
                                                //console.log(root.parentNode);
                                                tdElement2.appendChild(tdElement3);

                                        }

                                        // console.log(rowInfo,567);
                                        // var columnInfo = Object.keys(rowInfo);
                                        //
                                        //       console.log(columnInfo);
                                        //
                                        //                    for (var i = 0 ; i < rowInfo.length ; i++)
                                        //                    {
                                        //                             console.log('================I=============');
                                        //                 console.log(rowInfo[i]);
                                        //                 console.log(rowInfo);
                                        //
                                        //                          //  so there are 2 entries
                                        //                        //   for (var ii = 0 ; i<rowInfo[i].length ; ii++)
                                        //                        //   {
                                        //                        //     var tdElement = document.createElement('td');
                                        //                        //     tdElement.innerHTML = rowInfo[ii];
                                        //                        //     root.appendChild(tdElement);
                                        //                        // }
                                        //                    }


                                }

                                jetTables.prototype.constructRow = function(jsonElements, root )
                                {
                                        var  tbodyElement = document.createElement("tbody");
                                        root.appendChild(tbodyElement);
                                        for(var i =0 ; i<jsonElements.length ; i++)
                                        {
                                                var trElement = document.createElement("tr");

                                                this.constructColumn(jsonElements[i],trElement);
                                                tbodyElement.appendChild(trElement);
                                        }


                                }

                                jetTables.prototype.doLayout = function (jsonInfo,rootElemnt,tableSettings)
                                {

                                        var myTable = this.constructTable(rootElemnt,tableSettings);

                                        var width = tableSettings.columnWidths;

                                        var columnTitles = Object.keys(jsonInfo[0]);// using the first part of the array
                                        var myHeader =this.constructHeader(columnTitles,myTable,width);

                                        // console.log("sssssssssssssssssssss");
                                        // //console.log(jsonInfo.keys());
                                        //
                                        // console.log(Object.keys(jsonInfo[0]));
                                        //
                                        //
                                        //
                                        //
                                        // console.log("sssssssssssssssssssss");
                                        //    console.log(jsonInfo);

                                        var rows = this.constructRow(jsonInfo,myTable);
                                        // var x = document.getElementById("accountR11").rows[2].cells[2];
                                        // console.log(x);

                                }


                                return jetTables;

                        }();

                        return jetTables;



                }());
        }));
}(window.define));

/*
inputFormForXHR :{
isFormActive : true,
FormId : 'embeded12',
primaryKey : 'idbenificiary',
formElements :[ {
id : 'embeded12',
type : 'button',
Label : 'embeded12',
defaultValue : 'embeded12'

},{
id : 'embeded12',
type : 'button',
Label : 'embeded12',
defaultValue : 'embeded12'

}]
}
};

*/
