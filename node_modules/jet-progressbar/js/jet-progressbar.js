

(function (define) {
        'use strict';

        (function (root, factory) {
                if (typeof define === 'function' && define.amd) {
                        define(factory);
                } else if (typeof exports === 'object') {
                        module.exports = factory();
                } else {
                        root.jetProgressBar = factory();
                }
        }(window, function () {
                return (function () {




                var jetProgressBar = function()
                {


                        function jetProgressBar(setup)
                        {
                                this.container = setup.container;
                                this.entries = setup.entries;
                                this.ListContainer = '';
                                this.keyo ='';
                                this.statusUPD = ''
                                this.render();

                        }


                        jetProgressBar.prototype.render = function()
                        {
                                let i ;
                                let container = document.getElementById(this.container);
                                let ListContainer = document.createElement('ul');
                                ListContainer.classList.add('progressbar');

                                container.appendChild(ListContainer);
                                this.ListContainer = ListContainer;

                                for (i = 0 ;i < this.entries.length ; i++ )
                                {
                                        // console.log(this.entries[i]);

                                        this.renderElementa(this.entries[i]);
                                }



                        }


                        jetProgressBar.prototype.renderElementa = function(item)
                        {

                                let ListElement = document.createElement('li');
                                if(item.progress == 'done' )
                                {
                                        ListElement.classList.add('done');
                                }
                                if(item.progress == 'active' )
                                {
                                        ListElement.classList.add('active');
                                }



                                let header = document.createElement('span');
                                header.classList.add('step-title');
                                header.innerHTML = item.title;

                                let body = document.createElement('span');
                                body.classList.add('step-info');
                                body.innerHTML = item.body;

                                this.ListContainer.appendChild(ListElement);

                                ListElement.appendChild(header);
                                ListElement.appendChild(body);
                        }


                        jetProgressBar.prototype.updateStatus = function(keyo,statusUPD)
                        {
                                //console.log(this.entries[keyo]);

                                this.entries[keyo].progress = statusUPD;
;
                        }

                        jetProgressBar.prototype.renderUpdate = function()
                        {
                                let container = document.getElementById(this.container);
                                container.innerHTML = '';
                                this.render()
                        }
                        return jetProgressBar;
                }();
return jetProgressBar;


                              }());
                      }));
              }(window.define));
