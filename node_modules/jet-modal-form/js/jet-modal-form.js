(function (define) {
        'use strict';

        (function (root, factory) {
                if (typeof define === 'function' && define.amd) {
                        define(jetModalForm,factory);
                } else if (typeof exports === 'object') {
                        module.exports = factory();
                } else {
                        root.jetModalForm = factory();
                }
        }(window, function () {
                return (function () {









                        var jetModalForm = function()
                        {
                                var dialogClass = '';
                                var modalwidth = '';
                                var popId = '';


                                /**
                                * A forEach that will work with a NodeList and generic Arrays
                                * @param {array|NodeList} arr The array to iterate over
                                * @param {function} callback Function that executes for each element. First parameter is element, second is index
                                * @param {object} The context to execute callback with
                                */
                                function forEach(arr, callback, scope) {
                                        var i, len = arr.length;
                                        //console.log(callback);

                                        //for (i = 0; i < len; i += 1) {
                                        //        console.log("looping for =-=-=-=-=");
                                        callback.call(scope, arr, i);
                                        //}
                                }


                                function isDOMElement(obj) {
                                        try {
                                                return obj instanceof HTMLElement;
                                        } catch (e) {
                                                // Some browsers don't support using the HTMLElement so some extra
                                                // checks are needed.
                                                return typeof obj === 'object' && obj.nodeType === 1 && typeof obj.style === 'object' && typeof obj.ownerDocument === 'object';
                                        }
                                }


                                var events = [
                                        'select'
                                ];






                                function jetModalForm(jsonInfo,jsonsetup,rootElemnt)
                                {

                                        this.handlers = {};
                                        this.node ='';// node;

                                        this.jsonInfo = jsonInfo;
                                        this.jsonsetup = jsonsetup;
                                        this.rootElement = rootElemnt;
                                        this.dialogClass = jsonInfo.dialogClass;
                                        this.popup = '';
                                        this.elevation = jsonInfo.elevation;

                                        dialogClass=jsonInfo.dialogClass;
                                        modalwidth=jsonInfo.modalwidth;
                                        popId = jsonInfo.popupId;

                                        this.hasFooter=jsonInfo.hasFooterButtons;
                                        //console.log(this.dialogClass);
                                        this.DoLayout(jsonInfo,rootElemnt);
                                        //console.log("foomar");
                                }

                                jetModalForm.prototype.emit=function (instance, name) {
                                        var args = [].slice.call(arguments, 2);
                                        var Textnodes;
                                        if (events.indexOf(name) > -1) {


                                                if (instance.handlers[name] && instance.handlers[name] instanceof Array) {
                                                        forEach(instance.handlers[name], function (handle) {
                                                                window.setTimeout(function () {

                                                                        handle[0].callback.apply(handle[0].context, args);

                                                                        if (name == 'select'){

                                                                        }


                                                                }, 0);
                                                        });
                                                }
                                        } else {
                                                throw new Error(name + ' event cannot be found on jetIsometric.');
                                        }
                                }
                                function createMainPopup()
                                {
                                        //sample code to be used as an example
                                        var sidenav = document.createElement("div");
                                        sidenav.classList.add("sidenav");
                                        sidenav.classList.add("column");
                                        sidenav.classList.add("notification");
                                        sidenav.classList.add("hiding");
                                        sidenav.classList.add("has-text-centered");
                                        sidenav.setAttribute("id","mySidenav");
                                        sidenav.setAttribute("onclick", "ResizerPanelLayout.togglePanelLeft()");
                                        document.documentElement.style.setProperty('--footerHeight', footerHeight);
                                        sidenav.style.display = 'none';
                                        rz.appendChild(sidenav);


                                        console.log('it doesent show up ');
                                        //Events
                                        //E

                                        console.log('before mfouckers');

                                }
                                jetModalForm.prototype.close = function()
                                {
                                        //console.log('closing=========');

                                        if (this.elevation == 'bottom')
                                        {
                                                this.popup.classList.remove("showEmbeded");
                                        }
                                        if (this.elevation == 'top')
                                        {
                                                this.popup.classList.remove("show");
                                        }



                                }
                                jetModalForm.prototype.show = function()
                                {

                                        //console.log('Show=========');
                                        if (this.elevation == 'bottom')
                                        {
                                                this.popup.classList.add("showEmbeded");
                                        }
                                        if (this.elevation == 'top')
                                        {

                                                this.popup.classList.add("show");
                                        }


                                }

                                jetModalForm.prototype.PopupContainer = function(rootElemnt)
                                {
                                        // arguments should include a popup name to distinguish againsed different ones
                                        //
                                        //var body2 = document.getElementsByTagName("body")[0];
                                        var body2 = document.getElementById(rootElemnt);
                                        var formPopup = document.createElement("div");
                                        formPopup.setAttribute("class" , "popup")
                                        formPopup.setAttribute("id",popId);
                                        let n = modalwidth/2;
                                        //next step is to work out n
                                        //

                                        formPopup.setAttribute('style','left: calc(50% - '+n+'px) ; width :'+modalwidth+'px');
                                        formPopup.setAttribute("data-pop","pop-in");
                                        body2.appendChild(formPopup);


                                        //allocate the popup to the constructor
                                        //
                                        this.popup= formPopup;

                                        var closeNode = function (e) {

                                                var parent = (e.target || e.currentTarget);
                                                //console.log(parent);
                                                /*
                                                NOTE :
                                                Nbrilliant function to itterate the dom upwards
                                                find a class that the emitter can attach an data-item
                                                */
                                                function findAncestor (el, cls) {
                                                        while ((el = el.parentElement) && !el.classList.contains(cls));
                                                        return el;
                                                }
                                                //close the popup
                                                //if  the cancel is clicked
                                                //
                                                if ((parent.classList.contains('button-component')) && (parent.type ='button'))
                                               {
                                                       this.close();
                                                       var data = JSON.parse(parent.getAttribute('data-item'));

                                                       this.emit(this, 'select', {
                                                               target: e,
                                                               data:data,
                                                               parento :parent
                                                       });
                                               }
                                                 if (parent.classList.contains('close'))
                                                {
                                                        //console.log('this has a space');
                                                        //
                                                        this.close();
                                                        var data = JSON.parse(parent.getAttribute('data-item'));

                                                        this.emit(this, 'select', {
                                                                target: e,
                                                                data:data,
                                                                parento :parent
                                                        });
                                                        return;
                                                }else {
                                                        return;
                                                }
                                                // if (parent.classList.contains('stack'))
                                                // {
                                                //         //console.log("horraaaaa");
                                                //         //return 1;
                                                // }else {
                                                //         //console.log("is the screaming child ");
                                                //         //parent = (e.target || e.currentTarget).parentNode.parentNode.parentNode;
                                                //         parent = findAncestor (parent, 'stack');
                                                // }

                                                // in this element remove the show class and delete the form
                                                //console.log(parent);



                                        }.bind(this);




                                        forEach(formPopup, function (node) {

                                                  //     console.log('+++++++++++++++++ NODES +++++++++++++++++++++');
                                                  //     console.log(node);
                                        //        node.onclick = closeNode;


                                        });



                                        return formPopup;
                                }

                                jetModalForm.DialogContainer= function(popup,formName)
                                {

                                        var dialogC = document.createElement("dialog");
                                        dialogC.setAttribute("id",dialogClass);
                                        dialogC.setAttribute("style",'width:'+modalwidth+'px ; ; border-radius: 5px;');
                                        dialogC.setAttribute("data-pop","pop-in");
                                        dialogC.setAttribute("open"," ");
                                        popup.appendChild(dialogC);

                                        //create the header
                                        //
                                        var headerC = document.createElement("header");
                                        headerC.classList.add("dialog-header");
                                        dialogC.appendChild(headerC);

                                        //remeber the form heading comes from JSON
                                        var Myheading = document.createElement("h1");
                                        Myheading.setAttribute("id","__Dialog_create-repository_Create_a_new_repository");
                                        Myheading.innerHTML=formName ;
                                        headerC.appendChild(Myheading);

                                        //creating the close Button
                                        //
                                        var Myclose = document.createElement("a");

                                        Myclose.setAttribute("id","popupclose");
                                        let t = {jetFunction:'closeModal' , jetFunctionParams:'[]'};

                                        Myclose.setAttribute('data-item',JSON.stringify(t))
                                        Myclose.classList.add("close");
                                        //svg
                                        //
                                        var MycloseButton = document.createElementNS("http://www.w3.org/2000/svg", "svg");
                                        MycloseButton.setAttribute("aria-hidden","true");
                                        MycloseButton.classList.add("octicon");
                                        MycloseButton.setAttribute("version","1.1");
                                        MycloseButton.setAttribute('viewBox','0 0 12 16');

                                        //path
                                        var MycloseButtonPath = document.createElementNS("http://www.w3.org/2000/svg","path");
                                        MycloseButtonPath.setAttributeNS(null,"d","M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z");
                                        headerC.appendChild(Myclose);
                                        MycloseButton.appendChild(MycloseButtonPath);
                                        Myclose.appendChild(MycloseButton);

                                        return dialogC;


                                }

                                jetModalForm.createFormContent = function(theFormContainer,jsonInfo)
                                {


                                        var formC = document.createElement("form");
                                        //headerC.classList.add("dialog-header");
                                        //
                                        //formC.setAttribute("action",jsonFormAction);
                                        formC.setAttribute("method","post");
                                        //formC.setAttribute("target","_blank");
                                        formC.setAttribute("id",jsonInfo.formId);
                                        formC.setAttribute("autocomplete",'off');
                                        //formC.setAttribute("type","password");
                                        formC.setAttribute("onsubmit",'jetModalForm.xhr(jsonInfo.formId)');

                                        //    formC.setAttribute("onsubmit",'alert("cunts")');
                                        theFormContainer.appendChild(formC);

                                        var fieldsetC = document.createElement("fieldset");
                                        //headerC.classList.add("dialog-header");
                                        formC.appendChild(fieldsetC);

                                        var DialogConTent =document.createElement("div");
                                        DialogConTent.classList.add("dialog-content");
                                        fieldsetC.appendChild(DialogConTent);



                                        //sending to the textbox this needs an refix for statement
                                        //
                                        //
                                        let a = jsonInfo.formElements.length;
                                        //console.log(a);
                                        for (var i = 0; i < jsonInfo.formElements.length; i++) {
                                                //console.log(jsonFormElements[i]);
                                                if(jsonInfo.formElements[i].type == "html")
                                                {
                                                        jetModalForm.formHTML(DialogConTent,jsonInfo.formElements[i]);
                                                }
                                                if(jsonInfo.formElements[i].type == "textBox")
                                                {
                                                        jetModalForm.formTextbox(DialogConTent,jsonInfo.formElements[i]);
                                                }
                                                if(jsonInfo.formElements[i].type == "dropBox")
                                                {
                                                        //jetModalForm.formTextbox(DialogConTent,);
                                                        jetModalForm.SelectComponent(DialogConTent,jsonInfo.formElements[i]);
                                                }
                                                if(jsonInfo.formElements[i].type == "checkBox")
                                                {
                                                        jetModalForm.formCreateCheck(DialogConTent,jsonInfo.formElements[i]);

                                                }
                                                if(jsonInfo.formElements[i].type == "fileSelect")
                                                {
                                                        jetModalForm.formFileUpload(DialogConTent,jsonInfo.formElements[i]);

                                                }
                                        }

                                        return formC;

                                }


                                //-------------------------------------------------
                                //                  FORM COMPONENTS
                                //-------------------------------------------------

                                //defaultOptions
                                //
                                jetModalForm.formFileUpload = function (DialogConTent,jsonFormElements)
                                {

                                        var rowComponent = document.createElement("div");
                                        rowComponent.classList.add("row-component");
                                        DialogConTent.appendChild(rowComponent);

                                        var textBoxComponent = document.createElement("div");
                                        textBoxComponent.classList.add("text-box-component");
                                        rowComponent.appendChild(textBoxComponent);

                                        var labelContainer= document.createElement("div");
                                        labelContainer.classList.add("label-container");
                                        textBoxComponent.appendChild(labelContainer);

                                        var label = document.createElement("label");
                                        label.innerHTML = jsonFormElements.labelName;
                                        labelContainer.appendChild(label);

                                        var input = document.createElement("input");
                                        input.setAttribute("id",jsonFormElements['id']);
                                        input.setAttribute("name",jsonFormElements['dataName']);
                                        input.setAttribute("autocomplete",'off');
                                        //input.setAttribute("type","password");
                                        input.setAttribute("placeholder","repository path");
                                        textBoxComponent.appendChild(input);

                                        var file_input = document.createElement('input');
                                        file_input.type = 'file';
                                        file_input.style = 'display:none';
                                        file_input.setAttribute("id","ffile");
                                        //file_input.setAttribute("onchange","jetModalForm.selectFile(event.files)")
                                        rowComponent.appendChild(file_input);
                                        //document.getElementById("ffile").addEventListener("change", jetModalForm.selectFile, false);

                                        var button = document.createElement("button");
                                        button.classList.add("button-component");
                                        button.setAttribute("type","button");
                                        //button.setAttribute("onclick","document.getElementById('ffile').click()");
                                        button.setAttribute("multiple",'');
                                        button.setAttribute("id",'foo');
                                        button.innerHTML="choose File";
                                        rowComponent.appendChild(button);
                                        jetModalForm.selectFile();


                                }
                                jetModalForm.selectFile = function()
                                {

                                        //pass the name of the file holder
                                        //read the file contents
                                        var fileupload = document.getElementById("ffile");
                                        var fileupload2 = document.getElementById("file2fileupload");

                                        var filePath=document.getElementById("path32");

                                        var button = document.getElementById("foo");
                                        button.onclick = function () {
                                                fileupload.click();
                                        };
                                        fileupload.onchange = function () {
                                                var fileName = fileupload.value.split('\\')[fileupload.value.split('\\').length - 1];
                                                // console.log(fileName);
                                                fileupload2.value =  fileName;
                                                //    filePath.value =  fileName;
                                        };

                                }

                                //checkbox
                                jetModalForm.formCreateCheck = function(DialogConTent,jsonFormElements)
                                {
                                        //console.log("=================");
                                        //console.log(jsonFormElements);
                                        var rowComponent = document.createElement("div");
                                        rowComponent.classList.add("row-component");
                                        DialogConTent.appendChild(rowComponent);

                                        var checkBoxComponent = document.createElement("div");
                                        checkBoxComponent.classList.add("checkbox-component");
                                        rowComponent.appendChild(checkBoxComponent);

                                        var inputc = document.createElement("input");
                                        inputc.setAttribute("id",jsonFormElements['id']);
                                        inputc.setAttribute("name",jsonFormElements['dataName']);
                                        inputc.setAttribute("type","checkbox");

                                        var label = document.createElement("label");
                                        label.innerHTML = jsonFormElements['labelName'];

                                        checkBoxComponent.appendChild(inputc);
                                        checkBoxComponent.appendChild(label);
                                }

                                //SelectComponent
                                jetModalForm.SelectComponent = function(DialogConTent,jsonFormElements)
                                {
                                        //console.log(jsonFormElements);

                                        //console.log(jsonFormElements['id']);
                                        //console.log(jsonFormElements['labelName']);
                                        //console.log(jsonFormElements['option']);//: (3) ["none", "something", "something_else"]
                                        //console.log(jsonFormElements['type']);

                                        var rowComponent = document.createElement("div");
                                        rowComponent.classList.add("row-component");
                                        DialogConTent.appendChild(rowComponent);

                                        //<div class="select-component">
                                        var formSelectComponent = document.createElement("div");
                                        formSelectComponent.classList.add("select-component");
                                        rowComponent.appendChild(formSelectComponent);

                                        // labelledby <label for="__Select_Git_ignore">Git ignore</label>

                                        var formSelectComponentLabel = document.createElement("label");
                                        formSelectComponentLabel.innerHTML = jsonFormElements['labelName'];
                                        formSelectComponent.appendChild(formSelectComponentLabel);

                                        //<select id="__Select_Git_ignore">

                                        var formSelect = document.createElement("select");
                                        formSelect.setAttribute("id",jsonFormElements['id']);
                                        formSelect.setAttribute("name",jsonFormElements['dataName']);
                                        formSelectComponent.appendChild(formSelect);

                                        //    <option value="None">None</option>
                                        for  (var i =0;  i < jsonFormElements['option'].length ; i++)
                                        {
                                                jsonFormElements['option'][i];
                                                var selectOption = document.createElement("option");
                                                selectOption.setAttribute("value",jsonFormElements['option'][i]);
                                                selectOption.innerHTML= jsonFormElements['option'][i];;
                                                formSelect.appendChild(selectOption);
                                        }



                                }

                                //HTML elements
                                jetModalForm.formHTML = function (DialogConTent,jsonFormElements)
                                {
                                        var rowComponent = document.createElement("div");
                                        rowComponent.classList.add("row-component");
                                        rowComponent.setAttribute("id",jsonFormElements['id']);
                                        rowComponent.innerHTML = jsonFormElements['placeholder'] ;
                                        DialogConTent.appendChild(rowComponent);

                                }

                                //TextBox Imput
                                jetModalForm.formTextbox = function (DialogConTent,jsonFormElements)
                                {

                                        var rowComponent = document.createElement("div");
                                        rowComponent.classList.add("row-component");
                                        DialogConTent.appendChild(rowComponent);

                                        var textBoxComponent = document.createElement("div");
                                        textBoxComponent.classList.add("text-box-component");
                                        rowComponent.appendChild(textBoxComponent);

                                        var labelContainer = document.createElement("div");
                                        labelContainer.classList.add("label-container");
                                        textBoxComponent.appendChild(labelContainer);

                                        var label = document.createElement("label");
                                        label.innerHTML = jsonFormElements['labelName'];
                                        labelContainer.appendChild(label);

                                        var inputc = document.createElement("input");
                                        inputc.setAttribute("id",jsonFormElements['id']);
                                        inputc.setAttribute("name",jsonFormElements['dataName']);
                                        inputc.setAttribute("placeholder",jsonFormElements['placeholder']);
                                        inputc.setAttribute("autocomplete",'off');
                                        //inputc.setAttribute("type","lono");

                                        textBoxComponent.appendChild(inputc);

                                }


                                jetModalForm.footer = function(DialogConTent)
                                {

                                        var dialogFooter = document.createElement("div");
                                        dialogFooter.classList.add("dialog-footer");
                                        DialogConTent.appendChild(dialogFooter);

                                        var buttonGroup = document.createElement("div");
                                        buttonGroup.classList.add("button-group");
                                        dialogFooter.appendChild(buttonGroup);

                                        var button1 = document.createElement("button");
                                        button1.classList.add("button-component");
                                        button1.setAttribute("type","submit");
                                        button1.innerHTML = "submit";
                                        buttonGroup.appendChild(button1);

                                        var button2 = document.createElement("button");
                                        button2.classList.add("button-component");
                                        button2.setAttribute("type","button");
                                        button2.innerHTML = "cancel";
                                        buttonGroup.appendChild(button2);

                                }
                                jetModalForm.prototype.DoLayout = function(jsonInfo,rootElemnt)
                                {

                                        var popup = this.PopupContainer(rootElemnt);
                                        var theFormContainer = jetModalForm.DialogContainer(popup,jsonInfo.formName)
                                        var theform = jetModalForm.createFormContent(theFormContainer,jsonInfo);
                                        //jetModalForm.footer(theFormContainer);
                                        if(this.hasFooter == false){return}else{
                                        jetModalForm.footer(theform);}
                                        // console.log("dolayout Initialised !!!1");
                                };


                                jetModalForm.prototype.on = function (name, callback, scope)
                                {
                                        if (events.indexOf(name) > -1) {

                                                //console.log(this);
                                                if (!this.handlers[name]) {
                                                        this.handlers[name] = [];
                                                }
                                                this.handlers[name].push({
                                                        callback: callback,
                                                        context: scope
                                                });
                                        } else {
                                                throw new Error(name + ' is not supported by jetTreeView.');
                                        }
                                }





                                return jetModalForm;
                        }();




                        return jetModalForm;
                }());

        }));
}(window.define));
